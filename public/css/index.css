body {
  padding: 5px;
}

h1 {
  margin: 10px 0px;
}

.draft-table {
  border: 1px solid #ddd;
  border-collapse: collapse;
  margin-bottom: 5px;
}

.draft-table td, .draft-table th {
  border: 1px solid #ddd;
}

.container img, label {
  cursor: pointer;
}

input[type="number"] {
  width: 3em;
}

.pull-right table {
  margin-left: auto;
}

.pull-right th {
  text-align: left;
}

.container img.card {
  max-width: 223px;
  border: 1px solid black;
  border-radius: 10px;
}

.container.deck .card-container {
  position: relative;
  z-index: 1;
}

.container.deck .card-container.hover {
  z-index: 100;
}

.container.deck img.card {
  margin-top: -125%;
  position: relative;
  width: 100%;
  z-index: 1;
}

.container.deck img.card-popout {
  margin-top: -125%;
  position: absolute;
  left: 100%;
  width: 223px;
  height: 310px;
  border-radius: 10px;
}

.container.deck .bucket5 img.card-popout,
.container.deck .bucket6 img.card-popout,
.container.deck .bucket7 img.card-popout,
.container.deck .bucketX img.card-popout {
  left: -223px;
}

.container.deck .card-hover {
  cursor: pointer;
  height: 100%;
  margin-top: -125%;
  position: absolute;
  width: 100%;
  z-index: 5;
}

.container.deck h1 {
  margin-bottom: 18%;
}

.container .card_column {
  width: 12.5%;
  max-width: 225px;
  float: left;
  position: relative;
}

.spacer {
  clear: both;
}

.self {
  background-color: rgba(0, 255, 0, .3);
}

.self td:nth-of-type(2) {
  cursor: pointer;
  color: blue;
}

.opponent td:nth-of-type(2) {
  color: red;
}

.opponent::after {
  content: '<-- opponent';
}

.container {
  border: 1px solid black;
  padding: 0px 5px;
}

.error {
  color: red;
}

.pull-right {
  text-align: right;
  float: right;
  background: #eee;
  border: 1px solid #ddd;
  padding: 2px;
  position: relative;
  z-index: 1000;
}

.toggle-arrow {
  float: left;
  background: white;
  padding: 1px;
  border: 1px solid #ddd;
  text-align: center;
  cursor: pointer;
}

.arrow-label {
  font-size: 11px;
  margin-top: -10px;
}

.rotate {
  -webkit-transform: rotate(-90deg);
  -moz-transform: rotate(-90deg);
  -ms-transform: rotate(-90deg);
  -o-transform: rotate(-90deg);
  transform: rotate(-90deg);

  /* also accepts left, right, top, bottom coordinates; not required, but a good idea for styling */
  -webkit-transform-origin: 50% 50%;
  -moz-transform-origin: 50% 50%;
  -ms-transform-origin: 50% 50%;
  -o-transform-origin: 50% 50%;
  transform-origin: 50% 50%;

  /* Should be unset in IE9+ I think. */
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);
}

.controls {
  float: left;
}

.dropped::after {
  content: '<-- dropped';
}

#chat {
  position: fixed;
  bottom: 0;
  width: 100%;
  background: white;
}
#messages {
  height: 300px;
  overflow: auto;
}
#chat input {
  width: 100%;
  padding: 0;
  border-left: 0;
  border-right: 0;
}
